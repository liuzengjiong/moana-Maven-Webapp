package org.moana.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.moana.bean.UserOrder;

public interface UserOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_order
     *
     * @mbggenerated Sun Jan 08 13:18:34 CST 2017
     */
    @Delete({
        "delete from user_order",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_order
     *
     * @mbggenerated Sun Jan 08 13:18:34 CST 2017
     */
    @Insert({
        "insert into user_order (id, user_id, ",
        "ticket_id, purchase_time, ",
        "purchase_num, remark, ",
        "sum_price, display_time)",
        "values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{ticketId,jdbcType=VARCHAR}, #{purchaseTime,jdbcType=TIMESTAMP}, ",
        "#{purchaseNum,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, ",
        "#{sumPrice,jdbcType=DECIMAL}, #{displayTime,jdbcType=TIMESTAMP})"
    })
    int insert(UserOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_order
     *
     * @mbggenerated Sun Jan 08 13:18:34 CST 2017
     */
    @Select({
    	"select",
        "id, user_id, ticket_id, purchase_time, purchase_num, remark, sum_price, display_time",
        "from user_order",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ticket_id", property="ticketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="purchase_time", property="purchaseTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="purchase_num", property="purchaseNum", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="sum_price", property="sumPrice", jdbcType=JdbcType.DECIMAL)
    })
    UserOrder selectByPrimaryKey(String id);
    
    @Select({
        "select",
        "id, user_id, sum(purchase_num) as sum_purchase_num,ticket_id",
        "from user_order",
        "where user_id = #{0,jdbcType=VARCHAR}",
        "and ticket_id = #{1,jdbcType=VARCHAR}",
        "group by user_id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ticket_id", property="ticketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="sum_purchase_num", property="sumPurchaseNum")
    })
    Map<Object,Object> countPurchaseNumByUserIdandTicketId(String userId,String tickitId);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_order
     *
     * @mbggenerated Sun Jan 08 13:18:34 CST 2017
     */
    @Select({
        "select",
        "id, user_id, ticket_id, purchase_time, purchase_num, remark, sum_price, display_time",
        "from user_order"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ticket_id", property="ticketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="purchase_time", property="purchaseTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="purchase_num", property="purchaseNum", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="sum_price", property="sumPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="display_time", property="displayTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<UserOrder> selectAll();
    
    //分页查询
    @Select({
        "select",
        "o.id, o.user_id, o.ticket_id, o.purchase_time, o.purchase_num, o.remark, o.sum_price,",
        "t.movie_name,t.cinema_name,t.display_time",
        "from user_order o, ticket t ",
        "where o.ticket_id = t.id",
        "order by purchase_time desc",
        "limit #{0},#{1}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ticket_id", property="ticketId", jdbcType=JdbcType.VARCHAR),
        @Result(column="purchase_time", property="purchaseTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="purchase_num", property="purchaseNum", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="sum_price", property="sumPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="display_time", property="displayTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="movie_name", property="movieName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cinema_name", property="cinemaName", jdbcType=JdbcType.VARCHAR)
    })
    List<Map<Object,Object>> selectListByPages(int index,int num);
    
  //TODO  查询总数
    @Select({
        "select",
        "count(id)",
        "from user_order",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    int countTotal(String userId);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_order
     *
     * @mbggenerated Sun Jan 08 13:18:34 CST 2017
     */
    @Update({
        "update user_order",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "ticket_id = #{ticketId,jdbcType=VARCHAR},",
          "purchase_time = #{purchaseTime,jdbcType=TIMESTAMP},",
          "purchase_num = #{purchaseNum,jdbcType=INTEGER},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "sum_price = #{sumPrice,jdbcType=DECIMAL}",
          "display_time = #{displayTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(UserOrder record);
}